#!/bin/bash
if [ $# != 3 ] && [ $# != 5 ]
then
  echo "Usage: $0 ITKSourceRootDir ITKInstallRootDir [VTKSourceRootDir VTKInstallRootDir] ON/OFF"
  echo "ON/OFF: Build shared libraries"
  exit 2
fi
ITKSourceRootDir=$1
echo "ITKSourceRootDir: $ITKSourceRootDir"
ITKInstallRootDir=$2
echo "ITKInstallRootDir: $ITKInstallRootDir"
scriptDIR="$( cd "$( dirname "$0" )" && pwd )"
source $scriptDIR/ConfigurationVariables.script
source $scriptDIR/../Resources/CompileEnvironment.script
currentDir=`pwd`
echo "Current directory: ${currentDir}"
#Check if VTK directories are specified
if [ $# == 5 ]
then
  VTKSourceRootDir="$3"
  echo "VTKSourceRootDir: $VTKSourceRootDir"
  VTKInstallRootDir="$4"
  echo "VTKInstallRootDir: $VTKInstallRootDir"
  itkVTKGlueOption="-DModule_ITKVtkGlue:BOOL=ON "
  #Check VTK tag
  VTKSourceDir=VTK-Auto
  cd $VTKSourceRootDir/$VTKSourceDir
  #get last tag
  tag=`git describe --abbrev=0 --tags`
  echo "Last tag (VTK): $tag"
  VTKtagNum=${tag#"v"}
  echo "Last tag #(VTK): $VTKtagNum"
  #If Release Candidate, do nothing
  if [ "`echo $tag |grep rc`" != "" ]
  then
    echo "Current latest tag is a release candidate"
    exit 1
  fi
  #If tag is not already compiled on the system, exit
  #ITK needs VTK if VTK options are given
  VTKInstallDir=$VTKInstallRootDir/VTK_$VTKtagNum
  if [ ! -d $VTKInstallDir ]
  then
    echo "VTK tag ($tag) is not compiled. You requested to build ITK with VTK."
    exit 3
  fi
  tagMinor=${VTKtagNum:0:3}
  echo "VTK Tag#  Major.Minor: $tagMinor"
  #Build ITK either in shared or static libraries
  shared=$5
else
  itkVTKGlueOption=""
  #Build ITK either in shared or static libraries
  shared=$3
fi
#Download ITK
ITKSourceDir=ITK-Auto
cd $ITKSourceRootDir
if [ ! -d $ITKSourceDir ]
then
  git clone http://itk.org/ITK.git $ITKSourceDir
  cd $ITKSourceDir
else
  cd $ITKSourceDir
  git fetch
fi
#get last tag
tag=`git describe --abbrev=0 --tags`
echo "Last tag: $tag"
#If Release Candidate, do not compile
if [ "`echo $tag |grep rc`" != "" ]
then
  echo "Current latest tag is a release candidate"
  exit 1
fi
#Build ITK either in shared or static libraries
echo "Shared: $shared"
if [ $shared == ON ]
then
  suff="dyn"
else
  suff="stat"
fi
echo "Suffix: $suff"
#Find VTK Config Dir
if [ $# == 5 ]
then
  VTKConfigDIR=`find $VTKInstallDir -name VTK_${VTKtagNum}_linux64_${suff}\*_Release`
  VTKConfigDIR=${VTKConfigDIR}/lib/cmake/vtk-${tagMinor}
  echo "VTKConfigDir=$VTKConfigDIR"
fi
#If tag is already compiled on the system, do not compile
git checkout tags/$tag
ITKInstallDir=$ITKInstallRootDir/ITK$tag/ITK${tag}_THL64_${suff}_${CMAKE_BUILD_TYPE}
echo "Install Dir: $ITKInstallDir"
if [ -d $ITKInstallDir ]
then
  echo "ITK tag ($tag) already compiled"
  exit 1
fi
tagNum=${tag#"v"}
echo "Tag#: $tagNum"
echo "cmake: ${CMAKE}"
echo "Build testing: ${BUILD_TESTING}"
echo "cmake_build_type: ${CMAKE_BUILD_TYPE}"
nbThreads=8
echo "#Threads: ${nbThreads}"
#Check if build directory exists.
#Removes if and recreate it
ITKBuildDir=$ITKSourceRootDir/InsightToolkit-Auto-${tagNum}-build
echo "ITK Build Directory: $ITKBuildDir"
if [ $ITKBuildDir ]
then
  rm -rf $ITKBuildDir
fi
mkdir $ITKBuildDir
cd $ITKBuildDir
#Configure ITK
echo "Configure ITK"
CC=$CC CXX=$CXX $CMAKE \
      -DBUILD_TESTING:BOOL=${BUILD_TESTING} \
      -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} \
      -DCMAKE_INSTALL_PREFIX:PATH=$ITKInstallDir \
      -DBUILD_SHARED_LIBS:BOOL=$shared \
      -DModule_ITKIODCMTK:BOOL=ON \
      -DModule_ITKIOPhilipsREC=ON \
      -DModule_ITKIOMINC=ON \
      -DModule_MGHIO:BOOL=ON \
      -DITKV3_COMPATIBILITY:BOOL=ON \
      -DVTK_DIR:PATH=${VTKConfigDIR} \
      ${itkVTKGlueOption} \
      ../$ITKSourceDir
#Compile and install ITK
echo "Compilation"
make -j ${nbThreads}
make install -j ${nbThreads}
cd $currentDir
exit 0

